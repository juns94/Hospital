@model TestHNN.Models.Requerimiento

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Requerimiento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Solicitante, "Solicitante", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Solicitante", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Solicitante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dificultad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Dificultad", new List<SelectListItem> {
                       new SelectListItem { Value = "Alta" , Text = "Alta" },
                       new SelectListItem { Value = "Media" , Text = "Media" },
                       new SelectListItem { Value = "Baja" , Text = "Baja" }
                    }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Dificultad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Importancia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Importancia", new List<SelectListItem> {
                       new SelectListItem { Value = "Alta" , Text = "Alta" },
                       new SelectListItem { Value = "Media" , Text = "Media" },
                       new SelectListItem { Value = "Baja" , Text = "Baja" }
                    }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Importancia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Urgencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Urgencia", new List<SelectListItem> {
                       new SelectListItem { Value = "Alta" , Text = "Alta" },
                       new SelectListItem { Value = "Media" , Text = "Media" },
                       new SelectListItem { Value = "Baja" , Text = "Baja" }
                    }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Urgencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Jerarquia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Jerarquia", new List<SelectListItem> {
                       new SelectListItem { Value = "Alta" , Text = "Alta" },
                       new SelectListItem { Value = "Media" , Text = "Media" },
                       new SelectListItem { Value = "Baja" , Text = "Baja" }
                    }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Jerarquia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Prioridad   ", new List<SelectListItem> {
                       new SelectListItem { Value = "Alta" , Text = "Alta" },
                       new SelectListItem { Value = "Media" , Text = "Media" },
                       new SelectListItem { Value = "Baja" , Text = "Baja" }
                    }, htmlAttributes: new { @class = "form-control" })
             
                @Html.ValidationMessageFor(model => model.Prioridad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plantilla, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plantilla, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plantilla, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEnviado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaEnviado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaEnviado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaRecibido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaRecibido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaRecibido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Estado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sistema, "Sistema", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Sistema", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sistema, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <script>

        $(document).ready(function () {
            $('.date').datepicker({ dateFormat: "dd/mm/yy" });
        });


    </script>

}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>
